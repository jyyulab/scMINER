% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manipulate_sparseEset.R
\name{createSparseEset}
\alias{createSparseEset}
\title{Create a sparse expression set object from a data matrix}
\usage{
createSparseEset(
  input_matrix,
  do.sparseConversion = TRUE,
  cellData = NULL,
  featureData = NULL,
  annotation = "",
  projectID = NULL,
  addMetaData = TRUE
)
}
\arguments{
\item{input_matrix}{A data matrix with Features/Genes as the rows and Cells as the columns. It should be one of: 'dgCMatrix', 'dgTMatrix', 'dgeMatrix', 'matrix', 'data.frame'.}

\item{do.sparseConversion}{Logical, whether to convert the \strong{\code{input_matrix}} to a sparse matrix if it's not. Default: \code{TRUE}.}

\item{cellData}{A data frame containing meta data of cells or \code{NULL}. It's row.names should be consistent with the colnames of \strong{\code{input_matrix}}. Default: \code{NULL}.}

\item{featureData}{A data frame containing meata data of features or \code{NULL}. It's row.names should be consistent with the row.names of \strong{\code{input_matrix}}. Default: \code{NULL}.}

\item{annotation}{Character, a character describing the project properties. It's highly recommended to use the path to project space. Default: "".}

\item{projectID}{Character or \code{NULL}, the project name of the sparse eset object. Default: \code{NULL}.}

\item{addMetaData}{Logical, whether to calculate and add extra statistics (a.k.a. meta data) to cells and features. Default: \code{TRUE}.}
}
\value{
A sparse eset object with three slot: 1) gene by cell matrix; 2) data frame of cell information; 3) data frame of feature/gene information.
}
\description{
This function is used to create a pre-defined sparse expression set object from a data matrix of differnt classes: \strong{\code{"dgCMatrix"}}, \strong{\code{"dgTMatrix"}}, \strong{\code{"dgeMatrix"}},
\strong{\code{"matrix"}}, \strong{\code{"data.frame"}}. It allows the users to provide self-customized meta data for both cells (parameter \strong{\code{cellData}}) and genes (parameter \strong{\code{featureData}}).
It can also generate the meta data for both automatically, if \strong{\code{addMetaData}} = \code{TRUE}. The automatically generated meta data includes:
\itemize{
\item \strong{"nUMI"}: number of total UMIs in each cell, only valid when the values in data matrix are raw UMI counts;
\item \strong{"nFeature"}: number of expressed features/genes in each cell;
\item \strong{"pctMito"}: percentage of UMIs of mitochondrial genes (defined by "^mt-|^MT-") in each cell;
\item \strong{"pctSpikeIn"}: percentage of UMIs of spike-in RNAs (defined by "^ERCC-|^Ercc-") in each cell;
\item \strong{"nCell"}: number of cells that each feature/gene was identified in.
}
}
\examples{
data("pbmc14k_rawCount")
## 1. Create SparseEset object solely from raw count matrix
pbmc14k_raw.eset <- createSparseEset(input_matrix = pbmc14k_rawCount,
                                     projectID = "PBMC14k",
                                     addMetaData = TRUE)

## 2. Create SparseEset with customized meta data
true_label <- read.table(system.file("extdata/demo_pbmc14k/PBMC14k_trueLabel.txt.gz", package = "scMINER"),
                         header = T, row.names = 1, sep = "\t", quote = "", stringsAsFactors = FALSE)
pbmc14k_raw.eset <- createSparseEset(input_matrix = pbmc14k_rawCount,
                                     cellData = true_label,
                                     featureData = NULL,
                                     projectID = "PBMC14k",
                                     addMetaData = TRUE)

}
