% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network_analysis.R
\name{getActivity_individual}
\alias{getActivity_individual}
\title{Calculate driver activities per group from network files}
\usage{
getActivity_individual(
  input_eset,
  network_file.tf = NULL,
  network_file.sig = NULL,
  driver_type = "TF_SIG",
  activity_method = "mean",
  do.z_normalization = TRUE
)
}
\arguments{
\item{input_eset}{The group-specific expression set object which has been filtered, normalized and log-transformed}

\item{network_file.tf}{The path to the TF network file generated by SJARACNe}

\item{network_file.sig}{The path to the SIG network file generated by SJARACNe}

\item{driver_type}{Character, type of the pre-defined driver list to use: "\code{TF}" for transcriptional factors only, "\code{SIG}" for signaling genes only, or "\code{TF_SIG}" for both. Default: "\code{TF_SIG}".}

\item{activity_method}{Character, method used to calculate the activity: "\code{mean}" (the default), "\code{weightedmean}", "\code{absmean}" or "\code{maxmean}".}

\item{do.z_normalization}{Logical, whether to do the z-normalization on the gene expression values in each sample. Set if to \code{FALSE} only when the expression values has been scaled in each cell. Default: \code{TRUE}.}
}
\value{
A expression set object of the group-of-interest. The \code{assayData} is the activity matrix of all cells of all groups, drivers by cells. The \code{phenoData} and \code{featureData} are exactly save with the input eset.
}
\description{
This function is used to calculate the driver activities of one single group from the sparse eset obj and networks generated by SJARACNe. To calculate driver activities of multiple groups from a scMINER directory, please use \code{getActivity_inBatch()}.
}
\examples{
activity_group.eset <- getActivity_individual(input_eset = group_specific.est,
                                              network_file.tf = "consensus_network_ncol_.txt",
                                              network_file.sig = "consensus_network_ncol_.txt",
                                              driver_type = "TF_SIG")
}
