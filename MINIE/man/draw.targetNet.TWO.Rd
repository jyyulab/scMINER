% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network.r
\name{draw.targetNet.TWO}
\alias{draw.targetNet.TWO}
\title{Target network structure plot for two drivers.}
\usage{
draw.targetNet.TWO(source1_label = "", source2_label = "",
  source1_z = NULL, source2_z = NULL, edge_score1 = NULL,
  edge_score2 = NULL, label_cex = 0.7, pdf_file = NULL,
  total_possible_target = NULL, show_test = FALSE)
}
\arguments{
\item{source1_label}{the label for the first(left) driver displayed on the plot.}

\item{source2_label}{the label for the second(right) driver displayed on the plot.}

\item{source1_z}{numeric, the Z statistic for the first driver, used to color the driver point.
If NULL, the driver will be colored in grey. Default is NULL.}

\item{source2_z}{numeric, the Z statistic for the second driver, used to color the driver point.
If NULL, the driver will be colored in grey. Default is NULL.}

\item{edge_score1}{a vector of numeric values, indicating the correlation between the first driver and the target genes.
The value ranges from -1 to 1, with positive value indicating postivie regulation and negative value indicating negative correlation.
The names for the vector is the gene labels displayed on the plot.}

\item{edge_score2}{a vector of numeric values, indicating the correlation between the second driver and the target genes.
Similar with \code{edge_score1}}

\item{label_cex}{numeric, \code{cex} for the target genes displayed on the plot. Default is 0.7.}

\item{pdf_file}{character, file path for the pdf file to save the figure into pdf format.If NULL, will not generate pdf file. Default is NULL.}

\item{total_possible_target}{numeric or a vector of characters. If input numeric, will be the total number of possible targets.
If input a vector of characters, will be the background list of all possible target genes.
This parameter will be passed to function \code{test.targetNet.overlap} to test whether the target genes of the two drivers are significantly intersected.
If NULL, will do not perform this test. Default is NULL.}

\item{show_test}{logical, indicating whether the testing results will be printed and returned. Default is FALSE.}
}
\value{
if \code{show_test}==FALSE, will return logical value indicating whether the plot has been successfully generated, otherwise will return the statistics of testing.
}
\description{
\code{draw.targetNet.TWO} will draw the network structure for the selected two drivers and their target genes.
}
\details{
This is a function to draw target network structure for the selected two drivers.
The color bar represents the positive (red) or negative (blue) regulation with line width showing the strength.
}
\examples{
source1_label <- 'test1'
source1_z <- 1.96
edge_score1 <- (sample(1:160,size=80,replace=TRUE)-80)/80
names(edge_score1) <- sample(paste0('G',1:1000),size=80)
source2_label <- 'test2'
source2_z <- -2.36
edge_score2 <- (sample(1:240,size=120,replace=TRUE)-120)/120
names(edge_score2) <- sample(paste0('G',1:1000),size=120)
draw.targetNet.TWO(source1_label=source1_label,
               source2_label=source2_label,
               source1_z=source1_z,source2_z=source2_z,
               edge_score1=edge_score1,edge_score2=edge_score2,
               total_possible_target=paste0('G',1:1000),
               show_test=TRUE,label_cex=0.6)
\dontrun{
source1_label <- 'test1'
source1_z <- 1.96
edge_score1 <- (sample(1:160,size=100,replace=TRUE)-80)/80
names(edge_score1) <- sample(paste0('G',1:1000),size=80)
source2_label <- 'test2'
source2_z <- -2.36
edge_score2 <- (sample(1:240,size=100,replace=TRUE)-120)/120
names(edge_score2) <- sample(paste0('G',1:1000),size=120)
analysis.par <- list()
analysis.par$out.dir.PLOT <- getwd()
draw.targetNet.TWO(source1_label=source1_label,
               source2_label=source2_label,
               source1_z=source1_z,source2_z=source2_z,
               edge_score1=edge_score1,edge_score2=edge_score2,
               total_possible_target=paste0('G',1:1000),show_test=TRUE,
               pdf_file=sprintf('\%s/targetNetTWO.pdf',
               analysis.par$out.dir.PLOT))
}
}
