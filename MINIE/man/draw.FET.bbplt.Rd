% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GSEA.R
\name{draw.FET.bbplt}
\alias{draw.FET.bbplt}
\title{Bubble plot for the top drivers.}
\usage{
draw.FET.bbplt(driver_list = NULL, show_label = driver_list,
  Z_val = NULL, driver_type = NULL, target_list = NULL,
  transfer2symbol2type = NULL, bg_list = NULL, min_gs_size = 5,
  max_gs_size = 500, gs2gene = NULL, use_gs = NULL,
  display_gs_list = NULL, Pv_adj = "none", Pv_thre = 0.1,
  top_geneset_number = 30, top_driver_number = 30, pdf_file = NULL,
  main = "", mark_gene = NULL, driver_cex = 1, gs_cex = 1)
}
\arguments{
\item{driver_list}{a vector of characters, the name for the top drivers.}

\item{show_label}{a vector of characters, the name for the top drivers to display on the plot.
If NULL, will display the name in driver_list. Default is NULL.}

\item{Z_val}{a vector of numeric values, the Z statistics for the driver_list.
Better to give name to the vector, otherwise will automatically use driver_list as the name.}

\item{driver_type}{a vector of characters, the bio-type or other characteristics for the driver.
If not NULL, will display the type on the plot.
Better to give name to the vector, otherwise will automatically use driver_list as the name.}

\item{target_list}{a list for the target gene information for the drivers. The names for the list must contain the driver in driver_list.
Each object in the list must be a data.frame and should contain one column ("target") to save the target genes.
Strongly suggest to follow the NetBID2 pipeline, and the \code{target_list} could be automatically generated by \code{get_net2target_list} by
running \code{get.SJAracne.network}.}

\item{transfer2symbol2type}{data.frame, the transfer table for the original ID to the gene symbol and gene biotype (at gene level)
or transcript symbol and transcript biotype (at transcript level). strongly suggest to use \code{get_IDtransfer2symbol2type} to generate the transfer table.}

\item{bg_list}{a vector of characters, the background list of genes for analysis. Only accept gene symbols.
Default is NULL, will use all genes in the gs2gene as the background list.}

\item{min_gs_size}{numeric, minimum gene set size for analysis, default is 5.}

\item{max_gs_size}{numeric, maximum gene set size for analysis, default is 500.}

\item{gs2gene}{a list for geneset to genes, the name for the list is the gene set name and the content in each list is the vector for genes belong to that gene set.
If NULL, will use all_gs2gene loaded by using \code{gs.preload}. Default is NULL.}

\item{use_gs}{a vector of characters, the name for gene set category used for anlaysis.
If gs2gene is set to NULL, use_gs must be the subset of \code{names(all_gs2gene)}.
Could check \code{all_gs2gene_info} for the cateogory description.
Default is 'H', 'CP:BIOCARTA', 'CP:REACTOME', 'CP:KEGG'.}

\item{display_gs_list}{a vector of characters, the list of gene set names to display on the plot.
If NULL, the gene sets are shown according to the significant ranking.
Default is NULL.}

\item{Pv_adj}{character, p-value adjustment method, could check \code{p.adjust.methods} for the available options. Default is 'none'.}

\item{Pv_thre}{numeric, cutoff value for the adjusted p-values for significance.Default is 0.1.}

\item{top_geneset_number}{number for the top enriched gene sets to be displayed on the plot. Default is 30.}

\item{top_driver_number}{number for the top significant drivers to be displayed on the plot. Default is 30.}

\item{pdf_file}{character, file path for the pdf file to save the figure into pdf format.If NULL, will not generate pdf file. Default is NULL.}

\item{main}{character, \code{main} for the title on the plot.}

\item{mark_gene}{a vector of characters, if not NULL, the drivers in the mark_gene will be labelled red in the draw. Default is NULL.}

\item{driver_cex}{numeric, \code{cex} for the driver displayed on the plot. Default is 1.}

\item{gs_cex}{numeric, \code{cex} for the gene sets displayed on the plot. Default is 1.}
}
\value{
Will return logical value indicating whether the plot has been successfully generated
}
\description{
\code{draw.FET.bbplt} will draw the buble plot for the top drivers and the enriched gene sets for the targets of each driver.
}
\details{
This is a function to draw the bubble plot for the top significant drivers. Each row is a gene set, and each column is a driver.
Each bubble represents the enrichment for each driver's target gene in the corresponding gene set.
The size for each bubble shows the intersected size for the target gene and the gene set.
The color for each bubble shows the significance of enrichment performed by Fisher's Exact Test.
Color bar and size bar are shown in the draw.
Besides, the target size and the driver gene/transcript bio-type is shown at the bottom of the draw.
}
\examples{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1','driver/DATA/',package = "NetBID2")
NetBID.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',
                               logFC_col='logFC.G4.Vs.others_DA',
                               Pv_col='P.Value.G4.Vs.others_DA',
                               logFC_thre=0.4,
                               Pv_thre=1e-7,
                               main='Volcano Plot for G4.Vs.others_DA',
                               show_label=FALSE,
                               label_type = 'origin',
                               label_cex = 0.5)
gs.preload(use_spe='Homo sapiens',update=FALSE)
db.preload(use_level='gene',use_spe='human',update=FALSE)
use_genes <- unique(analysis.par$merge.network$network_dat$target.symbol)
transfer_tab <- get_IDtransfer2symbol2type(from_type = 'external_gene_name',
                                           use_genes=use_genes,
                                           dataset='hsapiens_gene_ensembl')
## get transfer table !!!
draw.FET.bbplt(driver_list=rownames(sig_driver),
               show_label=ms_tab[rownames(sig_driver),'gene_label'],
               Z_val=ms_tab[rownames(sig_driver),'Z.G4.Vs.others_DA'],
               driver_type=ms_tab[rownames(sig_driver),'gene_biotype'],
               target_list=analysis.par$merge.network$target_list,
               transfer2symbol2type=transfer_tab,
               min_gs_size=5,
               max_gs_size=500,use_gs=c('H'),
               top_geneset_number=5,top_driver_number=5,
               main='Bubbleplot for top driver targets',
               gs_cex = 0.4,driver_cex = 0.5)
 ## the cex is set just in case of figure margin too large,
 ## in real case, user could set cex larger or input pdf file name
\dontrun{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1','driver/DATA/',package = "NetBID2")
NetBID.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',
                               logFC_col='logFC.G4.Vs.others_DA',
                               Pv_col='P.Value.G4.Vs.others_DA',
                               logFC_thre=0.4,
                               Pv_thre=1e-7,
                               main='Volcano Plot for G4.Vs.others_DA',
                               show_label=FALSE,
                               label_type = 'origin',
                               label_cex = 0.5)
gs.preload(use_spe='Homo sapiens',update=FALSE)
use_genes <- unique(analysis.par$merge.network$network_dat$target.symbol)
transfer_tab <- get_IDtransfer2symbol2type(from_type = 'external_gene_name',
                                           use_genes=use_genes,
                                           dataset='hsapiens_gene_ensembl')
## get transfer table !!!
analysis.par$out.dir.PLOT <- getwd() ## directory for saving the pdf files
mark_gene <- c('KCNA1','EOMES','KHDRBS2','RBM24','UNC5D') ## marker for Group4
draw.bubblePlot(driver_list=rownames(sig_driver),
               show_label=ms_tab[rownames(sig_driver),'gene_label'],
               Z_val=ms_tab[rownames(sig_driver),'Z.G4.Vs.others_DA'],
               driver_type=ms_tab[rownames(sig_driver),'gene_biotype'],
               target_list=analysis.par$merge.network$target_list,
               transfer2symbol2type=transfer_tab,
               min_gs_size=5,max_gs_size=500,
               use_gs=use_gs=c('CP:KEGG','CP:BIOCARTA','H'),
               top_geneset_number=30,top_driver_number=50,
               pdf_file = sprintf('\%s/bubbledraw.pdf',
               analysis.par$out.dir.PLOT),
               main='Bubbleplot for top driver targets',
               mark_gene=ms_tab[which(ms_tab$geneSymbol \%in\% mark_gene),
               'originalID_label'])
}
}
