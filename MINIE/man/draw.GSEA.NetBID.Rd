% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GSEA.R
\name{draw.GSEA.NetBID}
\alias{draw.GSEA.NetBID}
\title{GSEA (gene set enrichment analysis) plot for the list of drivers.}
\usage{
draw.GSEA.NetBID(DE = NULL, name_col = NULL, profile_col = NULL,
  profile_trend = "pos2neg", driver_list = NULL,
  show_label = driver_list, driver_DA_Z = NULL, driver_DE_Z = NULL,
  target_list = NULL, top_driver_number = 30, target_nrow = 2,
  target_col = "RdBu", target_col_type = "PN", left_annotation = "",
  right_annotation = "", main = "", profile_sig_thre = 0,
  Z_sig_thre = 1.64, pdf_file = NULL)
}
\arguments{
\item{DE}{data.frame,the differentiated expression results.
This data.frame could be generated by using \code{getDE.limma.2G} or \code{getDE.BID.2G}.
If user want to generate this data.frame by other strategies, the rownames must be the gene names or need one column to be the gene name
(set in \code{name_col}) and must contain the columns indicating the differentiated expression profile.}

\item{name_col}{character, the name of the column in \code{DE}, which contains the gene name. If NULL, will use the rownames of \code{DE}.
Default is NULL.}

\item{profile_col}{character, the name of the column in \code{DE}, which will be used as the differentiated expression profile.
If DE is created by \code{getDE.limma.2G} or \code{getDE.BID.2G}, this parameter could be 'logFC' or 't'.}

\item{profile_trend}{character, the choice of how to display the profile, from high/positive to low/negative ('pos2neg')
or low/negative to high/positive ('neg2pos').Default is 'pos2neg'.}

\item{driver_list}{a vector of characters, the name for the top drivers.}

\item{show_label}{a vector of characters, the name for the top drivers to display on the plot.
If NULL, will display the name in driver_list. Default is NULL.}

\item{driver_DA_Z}{a vector of numeric values, the Z statistics of differentiated activity (DA) for the driver_list.
Better to give name to the vector, otherwise will automatically use driver_list as the name.}

\item{driver_DE_Z}{a vector of numeric values, the Z statistics of differentiated expression (DE) for the driver_list.
Better to give name to the vector, otherwise will automatically use driver_list as the name.}

\item{target_list}{a list for the target gene information for the drivers. The names for the list must contain the driver in driver_list.
Each object in the list must be a data.frame and should contain one column ("target") to save the target genes.
Strongly suggest to follow the NetBID2 pipeline, and the \code{target_list} could be automatically generated by \code{get_net2target_list} by
running \code{get.SJAracne.network}.}

\item{top_driver_number}{numeric, number for the top significant drivers to be displayed on the plot. Default is 30.}

\item{target_nrow}{numeric, number of rows for each driver display on the plot. Two options, 1 or 2.
If set to 1, the target genes' position on the profile will be displayed in one row.
If set to 2, the target genes' position on the profile will be displayed in two rows,
with positive regulated genes displayed on the first row and negative regulated genes displayed on the second row.
Default is 2.}

\item{target_col}{character, choice of color pattern used to display the targets. Two options,'black' or 'RdBu'.
If set to 'black', the lines will be colored in black.
If set to 'RdBu', the lines will be colored into Red to Blue color bar.
If \code{target_col_type} is set as 'PN', the positive regulated genes will be colored in red and negative regulated genes in blue.
If \code{target_col_type} is set as 'DE', the color for the target genes is set according to its value in the differentiated expression profile,
with significant high set for red and low for blue. The significant threshold is set by \code{profile_sig_thre}.
Default is 'RdBu'.}

\item{target_col_type}{character, choice of the pattern used to display the color for target genes, only work when \code{target_col} is set as 'RdBu'.
Two options,'PN' or 'DE'.
If set as 'PN', the positive regulated genes will be colored in red and negative regulated genes in blue.
If set as 'DE', the color for the target genes is set according to its value in the differentiated expression profile,
Default is 'PN'.}

\item{left_annotation}{character, annotation displayed on the left of the figure representing left condition of the rank_profile. Default is "".}

\item{right_annotation}{character, annotation displayed on the right of the figure representing right condition of the rank_profile. Default is "".}

\item{main}{character, title for the plot. Default is "".}

\item{profile_sig_thre}{numeric, threshold for the absolute values in profile to be treated as significance.
Target genes without signifcant values in the profile will be colored in grey. Only work when \code{target_col_type} is set as "DE" and \code{target_col} is set as "RdBu".
Default is 0.}

\item{Z_sig_thre}{numeric, threshold for the Z statistics in \code{driver_DA_Z} and \code{driver_DE_Z} to be treated as signifcance.
Only signifcant values will have background color. Default is 1.64.}

\item{pdf_file}{character, file path for the pdf file to save the figure into pdf format.If NULL, will not generate pdf file. Default is NULL.}
}
\value{
logical value indicating whether the plot has been successfully generated
}
\description{
\code{draw.GSEA.NetBID} will generate a GSEA plot for the list of drivers, including the target genes' position on the differentiated expression profile, with
statistics of differentiated expression (DE) and differentiated activity (DA) for each driver.
}
\details{
This is a plot function to draw GSEA for the list of drivers by the input of differentiated expression profile.
User could choose to display the target genes in one row or two rows, by selecting black color or red to blue color bar.
}
\examples{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1','driver/DATA/',package = "NetBID2")
NetBID.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
comp <- 'G4.Vs.others'
DE <- analysis.par$DE[[comp]]
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',
                               logFC_col='logFC.G4.Vs.others_DA',
                               Pv_col='P.Value.G4.Vs.others_DA',
                               logFC_thre=0.4,
                               Pv_thre=1e-7,
                               main='Volcano Plot for G4.Vs.others_DA',
                               show_label=FALSE,
                               label_type = 'origin',
                               label_cex = 0.5)
driver_list <- rownames(sig_driver)
draw.GSEA.NetBID(DE=DE,profile_col='t',
                 name_col='ID',
                 profile_trend='neg2pos',
                 driver_list = driver_list,
                 show_label=ms_tab[driver_list,'gene_label'],
                 driver_DA_Z=ms_tab[driver_list,'Z.G4.Vs.others_DA'],
                 driver_DE_Z=ms_tab[driver_list,'Z.G4.Vs.others_DE'],
                 target_list=analysis.par$merge.network$target_list,
                 top_driver_number=5,
                 target_nrow=2,target_col='RdBu',
                 left_annotation = 'test_left',
                 right_annotation = 'test_right',
                 main='test',target_col_type='DE',
                 Z_sig_thre=1.64,
                 profile_sig_thre = 1.64)
\dontrun{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1','driver/DATA/',package = "NetBID2")
NetBID.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
comp <- 'G4.Vs.others'
DE <- analysis.par$DE[[comp]]
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',
                               logFC_col='logFC.G4.Vs.others_DA',
                               Pv_col='P.Value.G4.Vs.others_DA',
                               logFC_thre=0.4,
                               Pv_thre=1e-7,
                               main='Volcano Plot for G4.Vs.others_DA',
                               show_label=FALSE,
                               label_type = 'origin',
                               label_cex = 0.5)
driver_list <- rownames(sig_driver)
analysis.par$out.dir.PLOT <- getwd() ## directory for saving the pdf files
draw.GSEA.NetBID(DE=DE,profile_col='logFC',profile_trend='neg2pos',
                 driver_list = driver_list,
                 show_label=ms_tab[driver_list,'gene_label'],
                 driver_DA_Z=ms_tab[driver_list,'Z.G4.Vs.others_DA'],
                 driver_DE_Z=ms_tab[driver_list,'Z.G4.Vs.others_DE'],
                 target_list=analysis.par$merge.network$target_list,
                 top_driver_number=30,
                 target_nrow=2,
                 target_col='RdBu',
                 left_annotation = 'test_left',
                 right_annotation = 'test_right',
                 main='test',
                 target_col_type='DE',
                 Z_sig_thre=1.64,
                 profile_sig_thre = 1.64,
                 pdf_file=sprintf('\%s/NetBID_GSEA_demo1.pdf',
                 analysis.par$out.dir.PLOT))
draw.GSEA.NetBID(DE=DE,profile_col='t',profile_trend='neg2pos',
                 driver_list = driver_list,
                 show_label=ms_tab[driver_list,'gene_label'],
                 driver_DA_Z=ms_tab[driver_list,'Z.G4.Vs.others_DA'],
                 driver_DE_Z=ms_tab[driver_list,'Z.G4.Vs.others_DE'],
                 target_list=analysis.par$merge.network$target_list,
                 top_driver_number=30,
                 target_nrow=1,
                 target_col='RdBu',
                 left_annotation = 'test_left',
                 right_annotation = 'test_right',
                 main='test',target_col_type='PN',
                 Z_sig_thre=1.64,profile_sig_thre = 1.64,
                 pdf_file=sprintf('\%s/NetBID_GSEA_demo2.pdf',
                 analysis.par$out.dir.PLOT))
}
}
