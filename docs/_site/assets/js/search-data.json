{
  "0": {
    "id": "0",
    "title": "Run clustering with MICA",
    "content": "Run clustering with MICA module MICA(Mutual Information based Clustering Analysis) is a nonlinear clustering analysis tool designed for scRNA-seq data. To install MICA solely, please refer.. Preprocessing Basic MICA usage MICA Outputs Additional functions Tunning your t-SNE visualization Pick your optimal number of K Try other dimension reduction methods Visualize with U-MAP Preprocessing Preprocessing is very simple for MICA analysis. Basic MICA usage MICA Outputs Additional functions Tunning your t-SNE visualization Pick your optimal number of K Try other dimension reduction methods Visualize with U-MAP",
    "url": "http://localhost:4000/docs/MICA.html",
    "relUrl": "/docs/MICA.html"
  },
  "1": {
    "id": "1",
    "title": "Quick start with scMINER (local version)",
    "content": "# Color schemes Example Specific visual customization Example Color schemes New Just the Docs supports two color schemes: light (default), and dark. To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: Example # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; Preview dark color scheme Specific visual customization To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc.. are derived from these variables. To override a specific variable, uncomment out it’s line and change it’s value. For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it out, and change it’s value to our $blue-000 variable, or another shade of your choosing. Example // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependancies to fail.",
    "url": "http://localhost:4000/docs/MINIE.html",
    "relUrl": "/docs/MINIE.html"
  },
  "2": {
    "id": "2",
    "title": "Complemantary guidance with PBMC(12k) scRNA-seq data",
    "content": "Analysis on PBMC(12k) scRNA-seq data via scMINER Data preprocessing Run MICA clustering Install MINIE package in R Cell type analysis from MICA output Reading MICA output Marker gene highlighting Assign cell type to cluster Network generation via SJARACNe Find cell type specific master regulator Calculate Inferred activity Find Differential activity TF Data preprocessing Run MICA clustering Install MINIE package in R MINIE analysis was wrapped up as a R package to help bridge unsupervised clustering and gene regulatory network analysis. Here we demonstrate our pipeline using PBMC (10x genmomics) scRNA-seq data [link to data matrix]. Full data contains 68k cells(link to 10x website), in order to provide a quicker guidance, we’ve down sampled this data to 12k cells. Note: Detailed information about individual functions are documented in package manual. Cell type analysis from MICA output First, after clustering via MICA(see [MICA] (/docs/MICA.html), you can load MICA output (in .txt) as well as input expression matrix in R under an expressionSet. This is going to be the major data structure we used for MINIE analysis in R. Reading MICA output eset.demo &lt;- readMICAoutput( input_file=&quot;PBMC12k_MICA_input.txt&quot;, load_clust_label=TRUE, output_file=&quot;PBMC12k.ggplot.txt&quot;) Marker gene highlighting Picked marker genes could be visualized on t-SNE scatterplot, heatmap or violinplot. This will help pick up a reasonable number of cluster. gn.sel &lt;- c(&quot;GZMK&quot;,&quot;GZMH&quot;,&quot;GZMA&quot;,&quot;CCR7&quot;,&quot;CD8A&quot;,&quot;SELL&quot;) gene_highlighting(input_eset=eset.demo, target = gn.sel, title.size = 8) gene_vlnplot(eset.demo,target=gn.sel,group_tag = &quot;label&quot;) gene_heatmap(eset = eset.demo,target = gn.sel,group_tag = &quot;label&quot;, save_plot = TRUE,width = 6,height = 6, name = &quot;log2_expression&quot;,plot_name=&quot;./GeneHeatmap.png&quot;) Assign cell type to cluster Here we curated a reference signature list of 8 immune cell types(link) for cell type annotation. In AssignCellTypes.hmp function, we calculated cell type scores for each clusters, and visualize scores using heatmap. ref&lt;-read.xlsx(&quot;Immune_signatures.xlsx&quot;) hmp&lt;-AssignCellTypes.Hmp(ref=ref,eset=eset.demo,save_plot = TRUE) # Manually assign your cell type label celltype&lt;-c(&quot;MemoryT&quot;,&quot;NaiveT&quot;,&quot;CD8em&quot;,&quot;CD8eff&quot;) eset.demo$celltype &lt;- celltype[eset.demo$label] Network generation via SJARACNe In order to generate cell type/group/cluster specific network, group information should be stored under pData([your_expressionSet]). And R function generateSJAracneInput will help to partition your expression matrix and conduct a loose filtering of your scRNA-seq data(filter about 0 expressed genes in cluster). Besides, a reference TF list should be provided as tf.ref to guide hub gene selection. Each group will create one directory which contains filtered expression matrix in .exp format, as long as the filtered TF list in .txt. generateSJAracneInput(eset=eset.demo,tf.ref=tf.ref,wd.src=&quot;Sjaracne/&quot;, group_tag=&quot;celltype&quot;) Warning: SJARACNe has not been integrated into MINIE yet, please consult here to run SJARACNe for network generation on scRNA-seq data. Find cell type specific master regulator Identify master regulator from content based network is the key step in MINIE to help understanding your scRNA-seq data. Calculate Inferred activity TF acitivities are calculated by integrating expression profile of their targets. Targets identified from SJARACNe of perticular TF was normalized and averaged to infer TF activity. acs.demo &lt;- GetActivityFromSJARANCE( SJaracne_output_path=&quot;Sjaracne/&quot;, SJaracne_input_eset=eset.demo, activity.method=&quot;unweighted&quot;, activity.norm=TRUE, group_tag = &quot;celltype&quot;, save_network_file=FALSE, save_path=NA) Find Differential activity TF The function FindDAG was designed for identify highly differentiated TF from SJARACNe inferred activity matrix. In order to do so, we did two sided student’s t-test to compare mean acitivty from one cell type V.S. the others. res &lt;- FindDAG(eset = acs.demo,group_tag = &quot;celltype&quot;) This function will output a full matrix that contians all TF occurred in original dataset, statistics such as t.statistics, p-value, 95%CI, etc. are outputed to help idenify master regulators. print(head(res)) You can also visualize top master regulator candidates in heatmap or violinplots. Only png as plotting device is supported. gn.sel &lt;- TopMasterRegulator(res) gene_heatmap(eset = eset.demo,target = gn.sel,group_tag = &quot;label&quot;, width = 6,height = 6, save_plot=TRUE, name = &quot;log2_expression&quot;,plot_name=&quot;./TopTFHeatmap.png&quot;) ## R session info R version 3.5.0 (2018-04-23) Platform: x86_64-apple-darwin15.6.0 (64-bit) Running under: macOS High Sierra 10.13.6 Matrix products: default BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib LAPACK: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRlapack.dylib locale: [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 attached base packages: [1] parallel stats graphics grDevices utils datasets methods base other attached packages: [1] bindrcpp_0.2.2 Biobase_2.42.0 BiocGenerics_0.28.0 dplyr_0.7.8 [5] RColorBrewer_1.1-2 ggplot2_3.1.0 reshape2_1.4.3 loaded via a namespace (and not attached): [1] Rcpp_1.0.0 rstudioapi_0.8 bindr_0.1.1 magrittr_1.5 tidyselect_0.2.5 [6] munsell_0.5.0 colorspace_1.3-2 R6_2.3.0 rlang_0.3.0.1 stringr_1.3.1 [11] plyr_1.8.4 tools_3.5.0 grid_3.5.0 gtable_0.2.0 withr_2.1.2 [16] digest_0.6.18 yaml_2.2.0 lazyeval_0.2.1 assertthat_0.2.0 tibble_1.4.2 [21] crayon_1.3.4 zip_1.0.0 purrr_0.2.5 glue_1.3.0 labeling_0.3 [26] openxlsx_4.1.0 stringi_1.2.4 compiler_3.5.0 pillar_1.3.1 scales_1.0.0 [31] pkgconfig_2.0.2",
    "url": "http://localhost:4000/docs/PBMC-12k.html",
    "relUrl": "/docs/PBMC-12k.html"
  },
  "3": {
    "id": "3",
    "title": "Buttons",
    "content": "Buttons Basic button styles Links that look like buttons Button element Using utilities with buttons Button size Spacing between buttons Basic button styles Links that look like buttons Link button Link button Link button Link button Link button [Link button](http://example.com/){: .btn } [Link button](http://example.com/){: .btn .btn-purple } [Link button](http://example.com/){: .btn .btn-blue } [Link button](http://example.com/){: .btn .btn-green } [Link button](http://example.com/){: .btn .btn-outline } Button element GitHub flavored markdown does not support the button element, so you’ll have to use inline HTML for this: Button element &lt;button type=&quot;button&quot; name=&quot;button&quot; class=&quot;btn&quot;&gt;Button element&lt;/button&gt; Using utilities with buttons Button size Wrap the button in container that uses the font-size utility classes to scale buttons: Big ass button Tiny ass button &lt;span class=&quot;fs-8&quot;&gt; [Link button](http://example.com/){: .btn } &lt;/span&gt; &lt;span class=&quot;fs-3&quot;&gt; [Tiny ass button](http://example.com/){: .btn } &lt;/span&gt; Spacing between buttons Use the margin utility classes to add spacing between two buttons in the same block. Button with space Button Button with more space Button [Button with space](http://example.com/){: .btn .btn-purple .mr-2} [Button ](http://example.com/){: .btn .btn-blue } [Button with more space](http://example.com/){: .btn .btn-green .mr-4} [Button ](http://example.com/){: .btn .btn-blue }",
    "url": "http://localhost:4000/docs/ui-components/buttons.html",
    "relUrl": "/docs/ui-components/buttons.html"
  },
  "4": {
    "id": "4",
    "title": "Code",
    "content": "Code Inline code Syntax highlighted code blocks Code blocks with rendered examples Inline code Code can be rendered inline using single ticks by wrapping your code in single back ticks. Lorem ipsum dolor sit amet, &lt;inline code snippet&gt; adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, `&lt;inline code snippet&gt;` adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Syntax highlighted code blocks Use Jekyll’s built in syntax highlighting with Rouge for code blocks by using three backticks, followed by the language name: // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } js // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } Code blocks with rendered examples To demonstrate front end code, sometimes it useful to show a rendered example of that code. After including the styles from your project that you’ll need to show the rendering, you can use a div with the code-example class, followed by the code block syntax. If you want to render your output with Markdown instead of HTML, use the markdown=&quot;1&quot; attribute to tell Jekyll that the code you are rendering will be in Markdown format… This is about to get meta… Link button [Link button](http://example.com/){: .btn } &lt;div class=&quot;code-example&quot; markdown=&quot;1&quot;&gt; [Link button](http://example.com/){: .btn } &lt;/div&gt; markdown [Link button](http://example.com/){: .btn }",
    "url": "http://localhost:4000/docs/ui-components/code.html",
    "relUrl": "/docs/ui-components/code.html"
  },
  "5": {
    "id": "5",
    "title": "Color",
    "content": "Color Utilities Light Greys Dark Greys Purples Blues Greens Yellows Reds All the colors used in Just the Docs have been systemsized into a series of variables that have been extended to both font color and background color utility classes. Light Greys Color value Font color utility Background color utility grey-lt-000 .text-grey-lt-000 .bg-grey-lt-000 grey-lt-100 .text-grey-lt-100 .bg-grey-lt-100 grey-lt-200 .text-grey-lt-200 .bg-grey-lt-200 grey-lt-300 .text-grey-lt-300 .bg-grey-lt-300 Dark Greys Color value Font color utility Background color utility grey-dk-000 .text-grey-dk-000 .bg-grey-dk-000 grey-dk-100 .text-grey-dk-100 .bg-grey-dk-100 grey-dk-200 .text-grey-dk-200 .bg-grey-dk-200 grey-dk-250 .text-grey-dk-250 .bg-grey-dk-250 grey-dk-300 .text-grey-dk-300 .bg-grey-dk-300 Purples Color value Font color utility Background color utility purple-000 .text-purple-000 .bg-purple-000 purple-100 .text-purple-100 .bg-purple-100 purple-200 .text-purple-200 .bg-purple-200 purple-300 .text-purple-300 .bg-purple-300 Blues Color value Font color utility Background color utility blue-000 .text-blue-000 .bg-blue-000 blue-100 .text-blue-100 .bg-blue-100 blue-200 .text-blue-200 .bg-blue-200 blue-300 .text-blue-300 .bg-blue-300 Greens Color value Font color utility Background color utility green-000 .text-green-000 .bg-green-000 green-100 .text-green-100 .bg-green-100 green-200 .text-green-200 .bg-green-200 green-300 .text-green-300 .bg-green-300 Yellows Color value Font color utility Background color utility yellow-000 .text-yellow-000 .bg-yellow-000 yellow-100 .text-yellow-100 .bg-yellow-100 yellow-200 .text-yellow-200 .bg-yellow-200 yellow-300 .text-yellow-300 .bg-yellow-300 Reds Color value Font color utility Background color utility red-000 .text-red-000 .bg-red-000 red-100 .text-red-100 .bg-red-100 red-200 .text-red-200 .bg-red-200 red-300 .text-red-300 .bg-red-300",
    "url": "http://localhost:4000/docs/utilities/color.html",
    "relUrl": "/docs/utilities/color.html"
  },
  "6": {
    "id": "6",
    "title": "Markdown kitchen sink",
    "content": "Text can be bold, italic, or strikethrough. Link to another page. There should be whitespace between paragraphs. There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project. Header 1 This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. Header 2 This is a blockquote following a header. When something is important enough, you do it even if the odds are not in your favor. Header 3 // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } # Ruby code with syntax highlighting GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, &quot;= #{version}&quot;) end Header 4 This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header. Header 5 This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header. Header 6 head1 head two three ok good swedish fish nice out of stock good and plenty nice ok good oreos hmm ok good zoute drop yumm There’s a horizontal rule below this. Here is an unordered list: Item foo Item bar Item baz Item zip And an ordered list: Item one Item two Item three Item four And a nested list: level 1 item level 2 item level 2 item level 3 item level 3 item level 1 item level 2 item level 2 item level 2 item level 1 item level 2 item level 2 item level 1 item And a task list Hello, this is a TODO item Hello, this is another TODO item Goodbye, this item is done Small image Large image Definition lists can be used with HTML syntax. Name Godzilla Born 1952 Birthplace Japan Color Green Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. The final element.",
    "url": "http://localhost:4000/docs/index-test.html",
    "relUrl": "/docs/index-test.html"
  },
  "7": {
    "id": "7",
    "title": "Welcome to scMINER",
    "content": "scMINER tutorial scMINER is a toolbox for single-cell analysis based on mutual information. This package is a combination of several individual tools including but not limit to MICA and MINIE. Separate installation of each individual tools is also available on github. Get started now View it on GitHub Getting started Dependencies scMINER is depend on python3 and R. Local installation: Install scMINER: Install scMINER-MINIE: #install dev_tool first install.packages(devtools) devtools::install_github(&quot;jyyulab/MINIE&quot;) Install R dependencies: install.packages(c(&quot;dplyr&quot;,&quot;plyr&quot;,&quot;ggplot2&quot;,&quot;Rcolorbrewer&quot;,&quot;reshape2&quot;,&quot;BiocGenerics&quot;)) if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;Biobase&quot;, version = &quot;3.8&quot;) # For R version &gt;= 3.5 About the project License Just the Docs is distributed by an MIT license. Contributing When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change. Read more about becoming a contributor in our GitHub repo.",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },
  "8": {
    "id": "8",
    "title": "Labels",
    "content": "Labels Use labels as a way to add an additional mark to a section of your docs. Labels come in a few colors. By default, labels will be blue. Default label Blue label Stable New release Coming soon Deprecated Default label {: .label } Blue label {: .label .label-blue} Stable {: .label .label-green} New release {: .label .label-purple} Coming soon {: .label .label-yellow} Deprecated {: .label .label-red}",
    "url": "http://localhost:4000/docs/ui-components/labels.html",
    "relUrl": "/docs/ui-components/labels.html"
  },
  "9": {
    "id": "9",
    "title": "Layout",
    "content": "Layout Utilities Spacing Vertical Alignment Display Spacing These spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively. Classname prefix What it does .m- margin .mx- margin-left, margin-right .my- margin top, margin bottom .mt- margin-top .mr- margin-right .mb- margin-bottom .ml- margin-left Classname prefix What it does .p- padding .px- padding-left, padding-right .py- padding top, padding bottom .pt- padding-top .pr- padding-right .pb- padding-bottom .pl- padding-left Spacing values are based on a 1rem = 16px spacing scale, broken down into these units: Spacer/suffix Size in rems Rem converted to px 1 0.25rem 4px 2 0.5rem 8px 3 0.75rem 12px 4 1rem 16px 5 1.5rem 24px 6 2rem 32px 7 2.5rem 40px 8 3rem 48px Examples In Markdown, use the `{: }` wrapper to apply custom classes: This paragraph will have a margin bottom of 1rem/16px at large screens. {: .mb-lg-4 } This paragraph will have 2rem/32px of padding on the right and left at all screen sizes. {: .px-6 } Vertical Alignment Classname What it does .v-align-baseline vertical-align: baseline .v-align-bottom vertical-align: bottom .v-align-middle vertical-align: middle .v-align-text-bottom vertical-align: text-bottom .v-align-text-top vertical-align: text-top .v-align-top vertical-align: top Display Display classes aid in adapting the layout of the elements on a page: Class   .d-block display: block .d-flex display: flex .d-inline display: inline .d-inline-block display: inline-block .d-none display: none Use these classes in conjunction with the responsive modifiers. Examples In Markdown, use the `{: }` wrapper to apply custom classes: This button will be hidden until medium screen sizes: [ A button ](#url) {: .d-none .d-md-inline-block } These headings will be `inline-block`: ### heading 3 { .d-inline-block } ### heading 3 { .d-inline-block }",
    "url": "http://localhost:4000/docs/utilities/layout.html",
    "relUrl": "/docs/utilities/layout.html"
  },
  "10": {
    "id": "10",
    "title": "Lists",
    "content": "Lists Unordered list Ordered list Task list Definition list Most lists can be rendered with pure markdown… Unordered list Item 1 Item 2 Item 3 or Item 1 Item 2 Item 3 - Item 1 - Item 2 - Item 3 _or_ * Item 1 * Item 2 * Item 3 Ordered list Item 1 Item 2 Item 3 1. Item 1 1. Item 2 1. Item 3 Task list hello, this is a todo item hello, this is another todo item goodbye, this item is done - [ ] hello, this is a todo item - [ ] hello, this is another todo item - [x] goodbye, this item is done Definition list Definition lists require HTML syntax and aren’t supported with the GitHub flavored markdown compiler. Name Godzilla Born 1952 Birthplace Japan Color Green &lt;dl&gt; &lt;dt&gt;Name&lt;/dt&gt; &lt;dd&gt;Godzilla&lt;/dd&gt; &lt;dt&gt;Born&lt;/dt&gt; &lt;dd&gt;1952&lt;/dd&gt; &lt;dt&gt;Birthplace&lt;/dt&gt; &lt;dd&gt;Japan&lt;/dd&gt; &lt;dt&gt;Color&lt;/dt&gt; &lt;dd&gt;Green&lt;/dd&gt; &lt;/dl&gt;",
    "url": "http://localhost:4000/docs/ui-components/lists.html",
    "relUrl": "/docs/ui-components/lists.html"
  },
  "11": {
    "id": "11",
    "title": "Responsive Modifiers",
    "content": "Responsive modifiers Just the Docs spacing works in conjunction with a variety of modifiers that allow you to target specific screen sizes responsively. Use these in conjunction with spacing and display prefix and suffix classes. Modifier Screen size (none) All screens until the next modifier xs 320px (20rem) and up sm 500px (31.25rem) and up md 740px (46.25rem) and up lg 1120px (70rem) and up xl 1400px (87.5rem) and up",
    "url": "http://localhost:4000/docs/utilities/responsive-modifiers.html",
    "relUrl": "/docs/utilities/responsive-modifiers.html"
  },
  "12": {
    "id": "12",
    "title": "Tables",
    "content": "Tables Tables are responsive by default, allowing wide tables to have a horizontal scroll to access columns outside of the normal viewport. head1 head two three ok good swedish fish nice out of stock good and plenty nice ok good oreos hmm ok good zoute drop yumm | head1 | head two | three | |:-|:|:| | ok | good swedish fish | nice | | out of stock | good and plenty | nice | | ok | good `oreos` | hmm | | ok | good `zoute` drop | yumm |",
    "url": "http://localhost:4000/docs/ui-components/tables.html",
    "relUrl": "/docs/ui-components/tables.html"
  },
  "13": {
    "id": "13",
    "title": "Typography",
    "content": "Typography Utilities Font size Font weight Line height Font size Use the .fs-1 - .fs-10 to set an explicit font-size. Class Small screen size font-size Large screen size font-size .fs-1 9px 10px .fs-2 11px 12px .fs-3 12px 14px .fs-4 14px 16px .fs-5 16px 18px .fs-6 18px 24px .fs-7 24px 32px .fs-8 32px 38px .fs-9 38px 42px .fs-10 42px 48px Font size 1 Font size 2 Font size 3 Font size 4 Font size 5 Font size 6 Font size 7 Font size 8 Font size 9 Font size 10 In Markdown, use the `{: }` wrapper to apply custom classes: Font size 1 {: .fs-1 } Font size 2 {: .fs-2 } Font size 3 {: .fs-3 } Font size 4 {: .fs-4 } Font size 5 {: .fs-5 } Font size 6 {: .fs-6 } Font size 7 {: .fs-7 } Font size 8 {: .fs-8 } Font size 9 {: .fs-9 } Font size 10 {: .fs-10 } Font weight Use the .fw-300 - .fw-700 to set an explicit font-size. Font weight 300 Font weight 400 Font weight 500 Font weight 700 In Markdown, use the `{: }` wrapper to apply custom classes: Font weight 300 {: .fw-300 } Font weight 400 {: .fw-400 } Font weight 500 {: .fw-500 } Font weight 700 {: .fw-700 } Line height Use the lh- classes to explicitly apply line height to text. Class line-height value Notes .lh-0 0   .lh-tight 1.1 Default for headings .lh-default 1.4 Default for body (paragraphs) No Line height No Line height Tight line height Tight line height Default line height Default line height In Markdown, use the `{: }` wrapper to apply custom classes: No Line height No Line height {: .lh-0 } Tight line height Tight line height {: .lh-tight } Default line height Default line height {: .fh-default }",
    "url": "http://localhost:4000/docs/utilities/typography.html",
    "relUrl": "/docs/utilities/typography.html"
  },
  "14": {
    "id": "14",
    "title": "Typography",
    "content": "Typography Font stack Responsive type scale Headings Body text Inline elements Typographic Utilities Font stack By default, Just the Docs uses a native system font stack for sans-serif fonts: -apple-system, BlinkMacSystemFont, &quot;helvetica neue&quot;, helvetica, roboto, noto, &quot;segoe ui&quot;, arial, sans-serif ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz For monospace type, like code snippets or the pre &lt;pre&gt; element, Just the Docs uses a native system font stack for monospace fonts: &quot;SFMono-Regular&quot;, Menlo, Consolas, Monospace ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz Responsive type scale Just the docs uses a responsive type scale that shifts depending on the viewport size. Common elements text elements rendered from markdown use a Selector Small screen size font-size Large screen size font-size h1, .text-alpha 32px 36px h2, .text-beta 18px 24px h3, .text-gamma 16px 18px h4, .text-delta 14px 16px h5, .text-epsilon 16px 18px h6, .text-zeta 18px 24px body 14px 16px Headings Headings are rendered like this: Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 Body text Default body text is rendered like this: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Inline elements Text can be bold, italic, or strikethrough. Link to another page. Text can be **bold**, _italic_, or ~~strikethrough~~. [Link to another page](another-page). Typographic Utilities There are a number of specific typographic CSS classes that allow you to do override default styling for font size, font-weight, line height, and capitalization. View typography utilities",
    "url": "http://localhost:4000/docs/ui-components/typography.html",
    "relUrl": "/docs/ui-components/typography.html"
  },
  "15": {
    "id": "15",
    "title": "UI Components",
    "content": "UI Components To make it as easy as possible to write documentation in plain Markdown, most UI components are styled using default Markdown elements with few additional CSS classes needed.",
    "url": "http://localhost:4000/docs/ui-components",
    "relUrl": "/docs/ui-components"
  },
  "16": {
    "id": "16",
    "title": "Utilities",
    "content": "Utilities CSS utility classes come in handy when you to want to override default styles to give create additional whitespace (margins/padding), unexpected shifts in font-size or weight, add color, or to hide (or show) something a specific screen size.",
    "url": "http://localhost:4000/docs/utilities",
    "relUrl": "/docs/utilities"
  }
  
}
